# Stage 1: Base image with PNPM and Doppler
FROM node:20.10-slim AS base

# Install dependencies
RUN apt-get update && apt-get install -y \
  curl \
  bash \
  openssl \
  wget \
  ca-certificates \
  gnupg \
  dos2unix \
  unzip \
  && rm -rf /var/lib/apt/lists/*

# Install pnpm
RUN corepack enable && corepack prepare pnpm@latest --activate

# Install Doppler CLI
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg && \
    curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | \
    gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main" > /etc/apt/sources.list.d/doppler-cli.list && \
    apt-get update && apt-get install -y doppler

# Stage 2: Builder
FROM base AS builder
WORKDIR /app

COPY pnpm-lock.yaml package.json ./
RUN pnpm install --frozen-lockfile

COPY tsconfig.json ./
COPY prisma ./prisma
COPY src ./src
COPY scripts ./scripts

RUN pnpm dlx prisma generate --schema=./prisma/schema.prisma

RUN pnpm run build

RUN pnpm install --prod --frozen-lockfile

FROM base AS runner
WORKDIR /app

RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 --home /home/redcloud redcloud && \
    mkdir -p /home/redcloud && chown -R redcloud:nodejs /home/redcloud

COPY --from=builder --chown=redcloud:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=redcloud:nodejs /app/dist ./dist
COPY --from=builder --chown=redcloud:nodejs /app/package.json ./package.json
COPY --from=builder --chown=redcloud:nodejs /app/prisma ./prisma

RUN chown -R redcloud:nodejs /app

USER redcloud

ENV PORT=4000
EXPOSE 4000

CMD ["pnpm", "start"]
